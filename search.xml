<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[小牛vs小客(巴什博弈变形)]]></title>
      <url>/2018/02/04/%E5%B0%8F%E7%89%9Bvs%E5%B0%8F%E5%AE%A2-%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%BC%88%E5%8F%98%E5%BD%A2/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p><a href="https://www.nowcoder.net/acm/contest/75/D" target="_blank" rel="noopener">题目链接</a></p>
<blockquote>
<p>小牛和小客玩石子游戏，他们用n个石子围成一圈，小牛和小客分别从其中取石子，谁先取完谁胜，每次可以从一圈中取一个或者相邻两个，每次都是小牛先取，请输出胜利者的名字。（1 2 3 4 取走 2 13 不算相邻）</p>
</blockquote>
<a id="more"></a>
<h2 id="Intput"><a href="#Intput" class="headerlink" title="Intput"></a>Intput</h2><blockquote>
<p>输入包括多组测试数据<br>每组测试数据一个n（1≤n≤10^9）</p>
</blockquote>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><blockquote>
<p>每组用一行输出胜利者的名字（小牛获胜输出XiaoNiu，小客获胜输出XiaoKe）</p>
</blockquote>
<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><ul>
<li><p>intput</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
</li>
<li><p>output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">XiaoNiu</span><br><span class="line">XiaoKe</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><blockquote>
<ul>
<li>当n&lt;=2时，毫无疑问是先手获胜。</li>
<li>当n&gt;2时，先手拿了之后，石子形状就可以看成一条线，后手可以选择拿1个或2个，使得剩下的石子是对称的，然后无论先手怎样拿，后手总能在对称位置拿到石子，最后一定是后手赢。</li>
</ul>
</blockquote>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;x)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;=<span class="number">2</span>)</span><br><span class="line">         <span class="built_in">cout</span>&lt;&lt;<span class="string">"XiaoNiu\n"</span>;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         <span class="built_in">cout</span>&lt;&lt;<span class="string">"XiaoKe\n"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 题解 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博弈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[不凡的夫夫(斯特灵公式)]]></title>
      <url>/2018/02/04/%E4%B8%8D%E5%87%A1%E7%9A%84%E5%A4%AB%E5%A4%AB-%E6%96%AF%E7%89%B9%E7%81%B5%E5%85%AC%E5%BC%8F/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p><a href="https://www.nowcoder.net/acm/contest/75/A" target="_blank" rel="noopener">题目链接</a></p>
<blockquote>
<p>夫夫有一天对一个数有多少位数感兴趣，但是他又不想跟凡夫俗子一样，所以他想知道给一个整数n，求n！的在8进制下的位数是多少位。</p>
</blockquote>
<a id="more"></a>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><blockquote>
<p>第一行是一个整数t(0&lt;t&lt;=1000000)(表示t组数据)<br>接下来t行，每一行有一个整数n(0&lt;=n&lt;=10000000)</p>
</blockquote>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><blockquote>
<p>输出n！在8进制下的位数。</p>
</blockquote>
<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><ul>
<li><p>intput</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br><span class="line">2</span><br><span class="line">5</span><br></pre></td></tr></table></figure>
</li>
<li><p>output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><blockquote>
<ul>
<li>看到n的值最大是1e7就知道不能暴力出奇迹，而求n!的位数，就很自然想到要用斯特林公式:<br><font size="5">$n!\approx\sqrt{2\pi n}(\frac{n}{e})^n$</font></li>
<li>虽然斯特林公式只是求阶乘的近似值，但即使在n很小的时候，斯特林公式的取值已经十分准确。</li>
<li>再求以8为底近似值的对数 +1(求其他进制下的位数类似，修改底数即可)。</li>
<li>注意:C语言中不支持任意底数的求对数运算，我们小小的转换一下$\log_x y=\frac{lgy}{lgx}$</li>
</ul>
</blockquote>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;   </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> Pi = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> e = <span class="number">2.718281828459</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);    </span><br><span class="line">	<span class="keyword">while</span>(t--)    </span><br><span class="line">	&#123;        </span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">		<span class="keyword">if</span>(n==<span class="number">0</span>||n==<span class="number">1</span>)	<span class="comment">//注意特判 </span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">		<span class="keyword">else</span>        </span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(<span class="keyword">int</span>)((<span class="built_in">log</span>(<span class="number">2.0</span>*Pi*n)/(<span class="built_in">log</span>(<span class="number">8</span>))/<span class="number">2.0</span> + n*<span class="built_in">log</span>(n/e)/<span class="built_in">log</span>(<span class="number">8</span>))+<span class="number">1</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 题解 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2 5 11 13的倍数(容斥原理)]]></title>
      <url>/2018/02/04/2-5-11-13%E7%9A%84%E5%80%8D%E6%95%B0-%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p><a href="https://www.nowcoder.net/acm/contest/75/G" target="_blank" rel="noopener">题目链接</a></p>
<blockquote>
<p>给出一个数n，求1到n中，有多少个数不是2 5 11 13的倍数。</p>
</blockquote>
<a id="more"></a>
<h2 id="Intput"><a href="#Intput" class="headerlink" title="Intput"></a>Intput</h2><blockquote>
<p>本题有多组输入<br>每行一个数n，1&lt;=n&lt;=10^18.</p>
</blockquote>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><blockquote>
<p>每行输出输出不是2 5 11 13的倍数的数共有多少。</p>
</blockquote>
<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><ul>
<li><p>intput</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure>
</li>
<li><p>output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><blockquote>
<ul>
<li>遍历一遍感觉是很快了，时间复杂度O(n)，但还是会超时，其实这道题可以达到O(1)。</li>
<li>我们反过来思考，用总数减去倍数的个数，先不考虑公倍数的问题，再减去公倍数的个数。</li>
<li>假设有三个集合，那么<br> A∪B∪C = A+B+C - A∩B - B∩C - C∩A + A∩B∩C</li>
</ul>
</blockquote>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> LL n,sum;</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n)!=EOF)</span><br><span class="line"> &#123;</span><br><span class="line">    sum=n/<span class="number">2</span>+n/<span class="number">5</span>+n/<span class="number">11</span>+n/<span class="number">13</span>;</span><br><span class="line">    LL cnt=sum-n/<span class="number">10</span>-n/<span class="number">22</span>-n/<span class="number">26</span>-n/<span class="number">55</span>-n/<span class="number">65</span>-n/<span class="number">143</span>+n/<span class="number">110</span>+n/<span class="number">130</span>+n/<span class="number">286</span>+n/<span class="number">715</span>-n/<span class="number">1430</span>;</span><br><span class="line">    LL ans=n-cnt;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 题解 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[欢迎来到Armin的博客]]></title>
      <url>/2018/02/03/Welcome/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>欢迎来到Armin的博客，其他内容还在持续搭建（xjb摸索）中。<br><a id="more"></a></p>
<hr>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="测试flash插件"><a href="#测试flash插件" class="headerlink" title="测试flash插件"></a>测试flash插件</h2><embed src="//music.163.com/style/swf/widget.swf?sid=5310505&type=2&auto=1&width=320&height=66" width="340" height="86" allownetworking="all">

<h2 id="测试插入代码"><a href="#测试插入代码" class="headerlink" title="测试插入代码"></a>测试插入代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;   </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Hello world!"</span>);<span class="comment">//测试注释</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试链接"><a href="#测试链接" class="headerlink" title="测试链接"></a>测试链接</h2><p><a href="https://paste.ubuntu.com/" target="_blank" rel="noopener">分享代码</a></p>
<h2 id="测试公式"><a href="#测试公式" class="headerlink" title="测试公式"></a>测试公式</h2><p>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p>
<script type="math/tex; mode=display">\ sum_{i=1}^n a_i=0</script><script type="math/tex; mode=display">f (x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2</script><script type="math/tex; mode=display">\ sum^{j-1}_{k=0}{\widehat{\gamma}_{kj} z_k}</script><h2 id="测试表格"><a href="#测试表格" class="headerlink" title="测试表格"></a>测试表格</h2><div class="table-container">
<table>
<thead>
<tr>
<th>姓名</th>
<th>分数</th>
</tr>
</thead>
<tbody>
<tr>
<td>蒟蒻</td>
<td>59</td>
</tr>
<tr>
<td>神犇</td>
<td>100</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      
        
    </entry>
    
  
  
</search>
